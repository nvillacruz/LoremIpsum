<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LoremIpsum.WpfApp">

    <ResourceDictionary.MergedDictionaries>
        <!--Order is important-->
        <ResourceDictionary Source="pack://application:,,,/LoremIpsum.WpfApp;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/LoremIpsum.WpfApp;component/Styles/Texts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/LoremIpsum.WpfApp;component/Styles/Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <ControlTemplate x:Key="errorTemplate">
        <Grid>
            <DockPanel>
                <AdornedElementPlaceholder >
                    <Button Style="{StaticResource ErrorHintIconButton}"
                            ToolTip="{Binding  RelativeSource={RelativeSource AncestorType=AdornedElementPlaceholder},  Path=AdornedElement.(Validation.Errors)[0].ErrorContent }"
                            Cursor="Hand"
                            Height="15"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Right">
                        <!--<Button.ToolTip>
                            <ToolTip>
                                <Grid Margin="2">
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=AdornedElementPlaceholder}, Path=ActualHeight}" />
                                </Grid>
                            </ToolTip>
                        </Button.ToolTip>-->
                    </Button>
                    <!--<TextBlock VerticalAlignment="Top"
                               HorizontalAlignment="Right"
                               Text="{Binding ElementName=my_adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />-->
                        <!--<Border VerticalAlignment="Top"
                                Height="20"
                                Background="Transparent"
                                ToolTip="{Binding ElementName=my_adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />-->
                </AdornedElementPlaceholder>
            
            </DockPanel>
        </Grid>
    </ControlTemplate>
    
    <!--BaseTextAndPasswordBoxStyle-->
    <Style TargetType="{x:Type Control}"
           x:Key="BaseTextAndPasswordBoxStyle"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize"
                Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily"
                Value="{StaticResource LatoRegular}" />
        <Setter Property="Margin"
                Value="2 5" />
        <Setter Property="Padding"
                Value="6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Validation.ErrorTemplate" 
                Value="{StaticResource errorTemplate}"/>
        <Setter Property="BorderBrush"
                Value="{DynamicResource {x:Static local:Brushes.ButtonHighlightBrush} }" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static local:Brushes.MainBackgroundBrush}}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static local:Brushes.ForegroundBrush}}" />
    </Style>
    
    <!--BaseTextAndPasswordBoxWithLabelStyle-->
    <Style TargetType="{x:Type Control}"
           x:Key="BaseTextAndPasswordBoxWithLabelStyle"
           BasedOn="{StaticResource BaseTextAndPasswordBoxStyle}">
        
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />

        <!--Attached Properties-->
        <Setter Property="local:LabelTextProperty.Value"
                Value="Label" />
        <Setter Property="local:LabelTextForegroundProperty.Value"
                Value="{DynamicResource {x:Static local:Brushes.ForegroundMainBrush1} }" />
        <!--End of Attached Properties-->
    </Style>

    <!--Default TextBox-->
    <Style TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource BaseTextAndPasswordBoxStyle}">
     
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <!--Placeholder-->
                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource LatoThin}"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{DynamicResource {x:Static local:Brushes.ForegroundDarkBrush1} }">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Value="">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox with Label at the upper left-->
    <Style x:Key="LabelTextBoxStyle"
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource BaseTextAndPasswordBoxWithLabelStyle}">
     
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <!--Custom Label Text-->
                        <StackPanel>
                            <TextBlock Text="{TemplateBinding local:LabelTextProperty.Value}"
                                       Foreground="{TemplateBinding local:LabelTextForegroundProperty.Value}"
                                       Background="Transparent"
                                       FontSize="{DynamicResource FontSizeSmall}"
                                       Margin="0 0 0 2" />
                            
                        </StackPanel>

                        <!--Main TextBox-->
                        <Border x:Name="border"
                                Grid.Row="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <Grid Background="{TemplateBinding Background}">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Padding="{TemplateBinding Padding}"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Background="{x:Null}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.FontSize="{TemplateBinding FontSize}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--If the control is mouse hovered-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="Validation.HasError"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="local:LabelTextForegroundProperty.Value"
                                        Value="{DynamicResource {x:Static local:Brushes.WordBlueBrush1}}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource {x:Static local:Brushes.WordDarkBlueBrush1}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!--If the control is focused-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                                <Condition Property="IsFocused"
                                           Value="True" />
                                <Condition Property="Validation.HasError"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="local:LabelTextForegroundProperty.Value"
                                        Value="{DynamicResource {x:Static local:Brushes.WordBlueBrush1}}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource {x:Static local:Brushes.WordDarkBlueBrush1}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!--If there is an error-->
                        <Trigger Property="Validation.HasError"
                                 Value="True">
                            <Setter Property="local:LabelTextForegroundProperty.Value"
                                    Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Default PasswordBox-->
    <Style TargetType="{x:Type PasswordBox}"
           BasedOn="{StaticResource BaseTextAndPasswordBoxStyle}">
        <Setter Property="local:MonitorPasswordProperty.Value"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource LatoThin}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"
                                   Visibility="{TemplateBinding local:HasTextProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{DynamicResource {x:Static local:Brushes.ForegroundDarkBrush1} }">
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--If Disabled-->
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                        <!--When hovered-->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Password with Label at the upper left-->
    <Style x:Key="LabelPasswordStyle"
           TargetType="PasswordBox"
           BasedOn="{StaticResource BaseTextAndPasswordBoxWithLabelStyle}">
        <Setter Property="local:MonitorPasswordProperty.Value"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        
                        <!--Custom Label Text-->
                        <StackPanel>
                            <TextBlock Text="{TemplateBinding local:LabelTextProperty.Value}"
                                       Foreground="{TemplateBinding local:LabelTextForegroundProperty.Value}"
                                       Background="Transparent"
                                       FontSize="{StaticResource FontSizeSmall}"
                                       Margin="0 0 0 2" />
                        </StackPanel>

                        <!--Main TextBox-->
                        <Border x:Name="border"
                                Grid.Row="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <Grid Background="{TemplateBinding Background}">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Padding="{TemplateBinding Padding}"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Background="{x:Null}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.FontSize="{TemplateBinding FontSize}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--If the control is mouse hovered-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="True" />
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="Validation.HasError"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="local:LabelTextForegroundProperty.Value"
                                        Value="{DynamicResource {x:Static local:Brushes.WordBlueBrush1}}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource {x:Static local:Brushes.WordDarkBlueBrush1}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!--If the control is focused-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="True" />
                                <Condition Property="IsFocused"
                                           Value="True" />
                                <Condition Property="Validation.HasError"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="local:LabelTextForegroundProperty.Value"
                                        Value="{DynamicResource {x:Static local:Brushes.WordBlueBrush1}}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource {x:Static local:Brushes.WordDarkBlueBrush1}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!--If there is an error-->
                        <Trigger Property="Validation.HasError"
                                 Value="True">
                            <Setter Property="local:LabelTextForegroundProperty.Value"
                                    Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>